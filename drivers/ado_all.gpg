with "ado_config";
with "ado";
#if HAVE_MYSQL then
with "ado_mysql";
#end if;
#if HAVE_SQLITE then
with "ado_sqlite";
#end if;
#if HAVE_POSTGRESQL then
with "ado_postgresql";
#end if;

project Ado_All is
   Version := "2.5.0";
   Library_Dir := "lib";

   Library_Type : Ado_Config.Library_Type_Type := external ("ADO_LIBRARY_TYPE", "static");

   for Library_Name use "ado_all";
   for Library_Kind use Library_Type;
   for Library_Version use "lib" & Project'Library_Name & ".so." & Version;
   for Source_Dirs use ("src");

   for Library_Dir use "../lib/ado_all/" & Project'Library_Kind;
   for Object_Dir use "../obj/ado_all/" & Project'Library_Kind;

   --  For a shared library, we want the library to be initialized automatically
   --  (Library_Auto_Init = true).  The 'gnatmake' tool invokes 'gnatbind' correctly
   --  and the pragma Linker_Constructor (ada_adoinit) is generated.  However, when using
   --  'gprbuild', this is not the case and we have to force that with the
   --  'gnatbind' option "-a".  For a static link library, the following is not used.
   package Binder is
       for Default_Switches ("Ada") use Ado_Config.Binder'Default_Switches ("Ada") & ("-a");
   end Binder;

   package Builder renames Ado_Config.Builder;
   package Compiler renames Ado_Config.Compiler;

end Ado_All;
